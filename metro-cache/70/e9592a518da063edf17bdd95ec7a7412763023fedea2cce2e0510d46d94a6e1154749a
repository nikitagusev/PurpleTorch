{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/interopRequireWildcard","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/objectSpread","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/createClass","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/inherits","data":{"isAsync":false}},{"name":"react","data":{"isAsync":false}},{"name":"./../../../node_modules/react-transform-hmr/lib/index.js","data":{"isAsync":false}},{"name":"react-native","data":{"isAsync":false}},{"name":"react-native-maps","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/interopRequireWildcard\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n\n  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/objectSpread\"));\n\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/classCallCheck\"));\n\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/createClass\"));\n\n  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"@babel/runtime/helpers/possibleConstructorReturn\"));\n\n  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"@babel/runtime/helpers/getPrototypeOf\"));\n\n  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7], \"@babel/runtime/helpers/inherits\"));\n\n  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8], \"react\"));\n\n  var _index = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9], \"./../../../node_modules/react-transform-hmr/lib/index.js\"));\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[10], \"react-native\");\n\n  var _reactNativeMaps = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11], \"react-native-maps\"));\n\n  var _jsxFileName = \"/home/nikitagusev/Udemy/map_pre/src/components/Mapper/Mapper.js\";\n  var _components = {\n    PickLocation: {\n      displayName: \"PickLocation\"\n    }\n  };\n\n  var _node_modulesReactTransformHmrLibIndexJs2 = (0, _index.default)({\n    filename: \"src/components/Mapper/Mapper.js\",\n    components: _components,\n    locals: [module],\n    imports: [_react.default]\n  });\n\n  function _wrapComponent(id) {\n    return function (Component) {\n      return _node_modulesReactTransformHmrLibIndexJs2(Component, id);\n    };\n  }\n\n  var PickLocation = function (_Component) {\n    (0, _inherits2.default)(PickLocation, _Component);\n\n    function PickLocation() {\n      var _getPrototypeOf2;\n\n      var _this;\n\n      (0, _classCallCheck2.default)(this, PickLocation);\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(PickLocation)).call.apply(_getPrototypeOf2, [this].concat(args)));\n      _this.state = {\n        focusedLocation: {\n          latitude: 37.7900352,\n          longitude: -122.4013726,\n          latitudeDelta: 0.0122,\n          longitudeDelta: _reactNative.Dimensions.get(\"window\").width / _reactNative.Dimensions.get(\"window\").height * 0.0122\n        },\n        userLocation: {\n          latitude: 37.7900352,\n          longitude: -122.4013726,\n          latitudeDelta: 0.0122,\n          longitudeDelta: _reactNative.Dimensions.get(\"window\").width / _reactNative.Dimensions.get(\"window\").height * 0.0122\n        },\n        locationChosen: false,\n        userLocationSet: false\n      };\n\n      _this.viewLocationHandler = function (event) {\n        var coords = event.nativeEvent.coordinate;\n\n        _this.map.animateToRegion((0, _objectSpread2.default)({}, _this.state.focusedLocation, {\n          latitude: coords.latitude,\n          longitude: coords.longitude\n        }));\n\n        _this.setState(function (prevState) {\n          return {\n            focusedLocation: (0, _objectSpread2.default)({}, prevState.focusedLocation, {\n              latitude: coords.latitude,\n              longitude: coords.longitude\n            }),\n            locationChosen: true\n          };\n        });\n      };\n\n      _this.userLocationHandler = function (event) {\n        var coords = event.nativeEvent.coordinate;\n\n        _this.setState(function (prevState) {\n          return {\n            userLocation: (0, _objectSpread2.default)({}, prevState.userLocation, {\n              latitude: coords.latitude,\n              longitude: coords.longitude\n            }),\n            userLocationSet: true\n          };\n        });\n      };\n\n      return _this;\n    }\n\n    (0, _createClass2.default)(PickLocation, [{\n      key: \"componentWillMount\",\n      value: function componentWillMount() {\n        var _this2 = this;\n\n        navigator.geolocation.getCurrentPosition(function (pos) {\n          var coordsEvent = {\n            nativeEvent: {\n              coordinate: {\n                latitude: pos.coords.latitude,\n                longitude: pos.coords.longitude\n              }\n            }\n          };\n\n          _this2.viewLocationHandler(coordsEvent);\n\n          _this2.userLocationHandler(coordsEvent);\n        }, function (err) {\n          console.log(err);\n          alert(\"Fetching the Position failed, please pick one manually!\");\n        });\n      }\n    }, {\n      key: \"componentDidMount\",\n      value: function componentDidMount() {\n        var _this3 = this;\n\n        this.timer = setInterval(function () {\n          navigator.geolocation.getCurrentPosition(function (pos) {\n            var coordsEvent = {\n              nativeEvent: {\n                coordinate: {\n                  latitude: pos.coords.latitude,\n                  longitude: pos.coords.longitude\n                }\n              }\n            };\n\n            _this3.userLocationHandler(coordsEvent);\n          }, function (err) {\n            console.log(err);\n            alert(\"Fetching the Position failed, please pick one manually!\");\n          });\n        }, 5000);\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        var _this4 = this;\n\n        var marker = null;\n        return _react.default.createElement(_reactNative.View, {\n          style: styles.container,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118\n          }\n        }, _react.default.createElement(_reactNativeMaps.default, {\n          initialRegion: this.state.focusedLocation,\n          style: styles.map,\n          onPress: this.viewLocationHandler,\n          ref: function ref(_ref) {\n            return _this4.map = _ref;\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119\n          }\n        }, marker), _react.default.createElement(_reactNative.View, {\n          style: styles.button,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127\n          }\n        }, _react.default.createElement(_reactNative.Button, {\n          title: \"Locate Me\",\n          onPress: function onPress() {\n            return alert(\"Pick Location!\");\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128\n          }\n        })));\n      }\n    }]);\n    return PickLocation;\n  }(_react.Component);\n\n  PickLocation = _wrapComponent(\"PickLocation\")(PickLocation);\n\n  var styles = _reactNative.StyleSheet.create({\n    container: {\n      flex: 1,\n      width: \"100%\",\n      alignItems: \"center\"\n    },\n    map: {\n      width: \"100%\",\n      height: \"100%\"\n    },\n    button: {\n      margin: 8\n    }\n  });\n\n  var _default2 = PickLocation;\n  exports.default = _default2;\n});","map":[[23,0,1,0],[27,0,2,0],[29,0,10,0],[51,6,12,6,"PickLocation"],[51,18],[66,12,13,2,"state"],[66,17],[66,20,13,10],[67,0,14,4,"focusedLocation"],[67,8,14,4,"focusedLocation"],[67,23,14,19],[67,25,14,21],[68,0,15,6,"latitude"],[68,10,15,6,"latitude"],[68,18,15,14],[68,20,15,16],[68,30,14,21],[69,0,16,6,"longitude"],[69,10,16,6,"longitude"],[69,19,16,15],[69,21,16,17],[69,22,16,18],[69,33,14,21],[70,0,17,6,"latitudeDelta"],[70,10,17,6,"latitudeDelta"],[70,23,17,19],[70,25,17,21],[70,31,14,21],[71,0,18,6,"longitudeDelta"],[71,10,18,6,"longitudeDelta"],[71,24,18,20],[71,26,19,8,"Dimensions"],[71,50,19,19,"get"],[71,53,19,8],[71,54,19,23],[71,62,19,8],[71,64,19,33,"width"],[71,69,19,8],[71,72,20,8,"Dimensions"],[71,96,20,19,"get"],[71,99,20,8],[71,100,20,23],[71,108,20,8],[71,110,20,33,"height"],[71,116,19,8],[71,119,21,8],[72,0,14,21],[72,9,13,10],[73,0,23,4,"userLocation"],[73,8,23,4,"userLocation"],[73,20,23,16],[73,22,23,18],[74,0,24,6,"latitude"],[74,10,24,6,"latitude"],[74,18,24,14],[74,20,24,16],[74,30,23,18],[75,0,25,6,"longitude"],[75,10,25,6,"longitude"],[75,19,25,15],[75,21,25,17],[75,22,25,18],[75,33,23,18],[76,0,26,6,"latitudeDelta"],[76,10,26,6,"latitudeDelta"],[76,23,26,19],[76,25,26,21],[76,31,23,18],[77,0,27,6,"longitudeDelta"],[77,10,27,6,"longitudeDelta"],[77,24,27,20],[77,26,28,8,"Dimensions"],[77,50,28,19,"get"],[77,53,28,8],[77,54,28,23],[77,62,28,8],[77,64,28,33,"width"],[77,69,28,8],[77,72,29,8,"Dimensions"],[77,96,29,19,"get"],[77,99,29,8],[77,100,29,23],[77,108,29,8],[77,110,29,33,"height"],[77,116,28,8],[77,119,30,8],[78,0,23,18],[78,9,13,10],[79,0,32,4,"locationChosen"],[79,8,32,4,"locationChosen"],[79,22,32,18],[79,24,32,20],[79,29,13,10],[80,0,33,4,"userLocationSet"],[80,8,33,4,"userLocationSet"],[80,23,33,19],[80,25,33,21],[81,0,13,10],[81,7],[83,12,36,2,"viewLocationHandler"],[83,31],[83,34,36,24],[83,44,36,24,"event"],[83,49,36,29],[83,51,36,33],[84,0,37,4],[84,12,37,10,"coords"],[84,18,37,16],[84,21,37,19,"event"],[84,26,37,24],[84,27,37,25,"nativeEvent"],[84,38,37,19],[84,39,37,37,"coordinate"],[84,49,37,4],[86,0,38,4],[86,14,38,9,"map"],[86,17,38,4],[86,18,38,13,"animateToRegion"],[86,33,38,4],[86,66,39,9],[86,72,39,14,"state"],[86,77,39,9],[86,78,39,20,"focusedLocation"],[86,93,38,4],[87,0,40,6,"latitude"],[87,10,40,6,"latitude"],[87,18,40,14],[87,20,40,16,"coords"],[87,26,40,22],[87,27,40,23,"latitude"],[87,35,38,4],[88,0,41,6,"longitude"],[88,10,41,6,"longitude"],[88,19,41,15],[88,21,41,17,"coords"],[88,27,41,23],[88,28,41,24,"longitude"],[89,0,38,4],[91,0,43,4],[91,14,43,9,"setState"],[91,22,43,4],[91,23,43,18],[91,33,43,18,"prevState"],[91,42,43,27],[91,44,43,31],[92,0,44,6],[92,17,44,13],[93,0,45,8,"focusedLocation"],[93,12,45,8,"focusedLocation"],[93,27,45,23],[93,61,46,13,"prevState"],[93,70,46,22],[93,71,46,23,"focusedLocation"],[93,86,45,23],[94,0,47,10,"latitude"],[94,14,47,10,"latitude"],[94,22,47,18],[94,24,47,20,"coords"],[94,30,47,26],[94,31,47,27,"latitude"],[94,39,45,23],[95,0,48,10,"longitude"],[95,14,48,10,"longitude"],[95,23,48,19],[95,25,48,21,"coords"],[95,31,48,27],[95,32,48,28,"longitude"],[96,0,45,23],[96,14,44,13],[97,0,50,8,"locationChosen"],[97,12,50,8,"locationChosen"],[97,26,50,22],[97,28,50,24],[98,0,44,13],[98,11,44,6],[99,0,52,5],[99,9,43,4],[100,0,53,3],[100,7],[102,12,56,2,"userLocationHandler"],[102,31],[102,34,56,24],[102,44,56,24,"event"],[102,49,56,29],[102,51,56,33],[103,0,57,4],[103,12,57,10,"coords"],[103,18,57,16],[103,21,57,19,"event"],[103,26,57,24],[103,27,57,25,"nativeEvent"],[103,38,57,19],[103,39,57,37,"coordinate"],[103,49,57,4],[105,0,58,4],[105,14,58,9,"setState"],[105,22,58,4],[105,23,58,18],[105,33,58,18,"prevState"],[105,42,58,27],[105,44,58,31],[106,0,59,6],[106,17,59,13],[107,0,60,8,"userLocation"],[107,12,60,8,"userLocation"],[107,24,60,20],[107,58,61,13,"prevState"],[107,67,61,22],[107,68,61,23,"userLocation"],[107,80,60,20],[108,0,62,10,"latitude"],[108,14,62,10,"latitude"],[108,22,62,18],[108,24,62,20,"coords"],[108,30,62,26],[108,31,62,27,"latitude"],[108,39,60,20],[109,0,63,10,"longitude"],[109,14,63,10,"longitude"],[109,23,63,19],[109,25,63,21,"coords"],[109,31,63,27],[109,32,63,28,"longitude"],[110,0,60,20],[110,14,59,13],[111,0,65,8,"userLocationSet"],[111,12,65,8,"userLocationSet"],[111,27,65,23],[111,29,65,25],[112,0,59,13],[112,11,59,6],[113,0,67,5],[113,9,58,4],[114,0,68,3],[114,7],[121,43,70,23],[122,0,70,23],[124,0,71,4,"navigator"],[124,8,71,4,"navigator"],[124,17,71,13],[124,18,71,14,"geolocation"],[124,29,71,4],[124,30,71,26,"getCurrentPosition"],[124,48,71,4],[124,49,71,45],[124,59,71,45,"pos"],[124,62,71,48],[124,64,71,52],[125,0,72,6],[125,14,72,12,"coordsEvent"],[125,25,72,23],[125,28,72,26],[126,0,73,8,"nativeEvent"],[126,12,73,8,"nativeEvent"],[126,23,73,19],[126,25,73,21],[127,0,74,10,"coordinate"],[127,14,74,10,"coordinate"],[127,24,74,20],[127,26,74,22],[128,0,75,12,"latitude"],[128,16,75,12,"latitude"],[128,24,75,20],[128,26,75,22,"pos"],[128,29,75,25],[128,30,75,26,"coords"],[128,36,75,22],[128,37,75,33,"latitude"],[128,45,74,22],[129,0,76,12,"longitude"],[129,16,76,12,"longitude"],[129,25,76,21],[129,27,76,23,"pos"],[129,30,76,26],[129,31,76,27,"coords"],[129,37,76,23],[129,38,76,34,"longitude"],[130,0,74,22],[131,0,73,21],[132,0,72,26],[132,11,72,6],[134,0,80,6],[134,10,80,6],[134,16,80,10],[134,17,80,11,"viewLocationHandler"],[134,36,80,6],[134,37,80,31,"coordsEvent"],[134,48,80,6],[136,0,81,6],[136,10,81,6],[136,16,81,10],[136,17,81,11,"userLocationHandler"],[136,36,81,6],[136,37,81,31,"coordsEvent"],[136,48,81,6],[137,0,82,5],[137,9,71,4],[137,11,83,4],[137,21,83,4,"err"],[137,24,83,7],[137,26,83,11],[138,0,84,6,"console"],[138,10,84,6,"console"],[138,17,84,13],[138,18,84,14,"log"],[138,21,84,6],[138,22,84,18,"err"],[138,25,84,6],[139,0,85,6,"alert"],[139,10,85,6,"alert"],[139,15,85,11],[139,16,85,12],[139,73,85,11],[139,74,85,6],[140,0,86,5],[140,9,71,4],[141,0,87,3],[144,42,88,22],[145,0,88,22],[147,0,89,6],[147,13,89,11,"timer"],[147,18,89,6],[147,21,89,19,"setInterval"],[147,32,89,30],[147,33,89,31],[147,45,89,36],[148,0,90,10,"navigator"],[148,10,90,10,"navigator"],[148,19,90,19],[148,20,90,20,"geolocation"],[148,31,90,10],[148,32,90,32,"getCurrentPosition"],[148,50,90,10],[148,51,90,51],[148,61,90,51,"pos"],[148,64,90,54],[148,66,90,58],[149,0,91,10],[149,16,91,16,"coordsEvent"],[149,27,91,27],[149,30,91,30],[150,0,92,12,"nativeEvent"],[150,14,92,12,"nativeEvent"],[150,25,92,23],[150,27,92,25],[151,0,93,14,"coordinate"],[151,16,93,14,"coordinate"],[151,26,93,24],[151,28,93,26],[152,0,94,16,"latitude"],[152,18,94,16,"latitude"],[152,26,94,24],[152,28,94,26,"pos"],[152,31,94,29],[152,32,94,30,"coords"],[152,38,94,26],[152,39,94,37,"latitude"],[152,47,93,26],[153,0,95,16,"longitude"],[153,18,95,16,"longitude"],[153,27,95,25],[153,29,95,27,"pos"],[153,32,95,30],[153,33,95,31,"coords"],[153,39,95,27],[153,40,95,38,"longitude"],[154,0,93,26],[155,0,92,25],[156,0,91,30],[156,13,91,10],[158,0,99,10],[158,12,99,10],[158,18,99,14],[158,19,99,15,"userLocationHandler"],[158,38,99,10],[158,39,99,35,"coordsEvent"],[158,50,99,10],[159,0,100,9],[159,11,90,10],[159,13,101,8],[159,23,101,8,"err"],[159,26,101,11],[159,28,101,15],[160,0,102,10,"console"],[160,12,102,10,"console"],[160,19,102,17],[160,20,102,18,"log"],[160,23,102,10],[160,24,102,22,"err"],[160,27,102,10],[161,0,103,10,"alert"],[161,12,103,10,"alert"],[161,17,103,15],[161,18,103,16],[161,75,103,15],[161,76,103,10],[162,0,104,9],[162,11,90,10],[163,0,105,7],[163,9,89,30],[163,11,105,8],[163,15,89,30],[163,16,89,6],[164,0,107,3],[167,31,110,11],[168,0,110,11],[170,0,111,4],[170,12,111,8,"marker"],[170,18,111,14],[170,21,111,17],[170,25,111,4],[171,0,117,4],[171,15,118,6],[171,44,118,7],[171,61,118,6],[172,0,118,12],[172,10,118,12],[172,15,118,17],[172,17,118,19,"styles"],[172,23,118,25],[172,24,118,26,"container"],[172,33,118,6],[173,0,118,6],[174,0,118,6],[175,0,118,6],[176,0,118,6],[177,0,118,6],[177,11,119,8],[177,40,119,9],[177,64,119,8],[178,0,120,10],[178,10,120,10],[178,23,120,23],[178,25,120,25],[178,30,120,30,"state"],[178,35,120,25],[178,36,120,36,"focusedLocation"],[178,51,119,8],[179,0,121,10],[179,10,121,10],[179,15,121,15],[179,17,121,17,"styles"],[179,23,121,23],[179,24,121,24,"map"],[179,27,119,8],[180,0,122,10],[180,10,122,10],[180,17,122,17],[180,19,122,19],[180,24,122,24,"viewLocationHandler"],[180,43,119,8],[181,0,123,10],[181,10,123,10],[181,13,123,13],[181,15,123,15],[181,28,123,15,"ref"],[181,32,123,18],[182,0,123,18],[182,19,123,22],[182,25,123,26],[182,26,123,27,"map"],[182,29,123,22],[182,32,123,33,"ref"],[182,36,123,18],[183,0,123,18],[183,11,119,8],[184,0,119,8],[185,0,119,8],[186,0,119,8],[187,0,119,8],[188,0,119,8],[188,11,125,11,"marker"],[188,17,119,8],[188,18,118,6],[188,20,127,8],[188,49,127,9],[188,66,127,8],[189,0,127,14],[189,10,127,14],[189,15,127,19],[189,17,127,21,"styles"],[189,23,127,27],[189,24,127,28,"button"],[189,30,127,8],[190,0,127,8],[191,0,127,8],[192,0,127,8],[193,0,127,8],[194,0,127,8],[194,11,128,10],[194,40,128,11],[194,59,128,10],[195,0,128,18],[195,10,128,18],[195,15,128,23],[195,17,128,24],[195,28,128,10],[196,0,128,36],[196,10,128,36],[196,17,128,43],[196,19,128,45],[197,0,128,45],[197,19,128,51,"alert"],[197,24,128,56],[197,25,128,57],[197,41,128,56],[197,42,128,45],[198,0,128,45],[198,11,128,10],[199,0,128,10],[200,0,128,10],[201,0,128,10],[202,0,128,10],[203,0,128,10],[203,10,127,8],[203,11,118,6],[203,12,117,4],[204,0,132,3],[207,4,12,27,"Component"],[207,20],[211,0,135,0],[211,6,135,6,"styles"],[211,12,135,12],[211,15,135,15,"StyleSheet"],[211,39,135,26,"create"],[211,45,135,15],[211,46,135,33],[212,0,136,2,"container"],[212,4,136,2,"container"],[212,13,136,11],[212,15,136,13],[213,0,137,4,"flex"],[213,6,137,4,"flex"],[213,10,137,8],[213,12,137,10],[213,13,136,13],[214,0,138,4,"width"],[214,6,138,4,"width"],[214,11,138,9],[214,13,138,11],[214,19,136,13],[215,0,139,4,"alignItems"],[215,6,139,4,"alignItems"],[215,16,139,14],[215,18,139,16],[216,0,136,13],[216,5,135,33],[217,0,141,2,"map"],[217,4,141,2,"map"],[217,7,141,5],[217,9,141,7],[218,0,142,4,"width"],[218,6,142,4,"width"],[218,11,142,9],[218,13,142,11],[218,19,141,7],[219,0,143,4,"height"],[219,6,143,4,"height"],[219,12,143,10],[219,14,143,12],[220,0,141,7],[220,5,135,33],[221,0,145,2,"button"],[221,4,145,2,"button"],[221,10,145,8],[221,12,145,10],[222,0,146,4,"margin"],[222,6,146,4,"margin"],[222,12,146,10],[222,14,146,12],[223,0,145,10],[224,0,135,33],[224,3,135,15],[224,4,135,0],[226,18,150,15,"PickLocation"],[226,30]]},"type":"js/module"}]}